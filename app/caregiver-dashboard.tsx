import React, { useMemo, useState } from "react";
import {
  Dimensions,
  Platform,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";
import Modal from "react-native-modal";
import {
  Avatar,
  Button,
  Divider,
  RadioButton,
  TextInput,
} from "react-native-paper";

const { width } = Dimensions.get("window");

const sampleWeek = [
  { day: "T2", date: 29, count: 0 },
  { day: "T3", date: 30, count: 0 },
  { day: "T4", date: 1, count: 0 },
  { day: "T5", date: 2, count: 0 },
  { day: "T6", date: 3, count: 2 },
  { day: "T7", date: 4, count: 0 },
  { day: "CN", date: 5, count: 1 },
];

const todayAppointments = [
  {
    id: "a1",
    client: "B√† Nguy·ªÖn Th·ªã B",
    type: "ChƒÉm s√≥c c√° nh√¢n",
    time: "14:00 - 16:00",
    place: "Q.1, TP.HCM",
    status: "S·∫Øp t·ªõi",
  },
  {
    id: "a2",
    client: "√îng Tr·∫ßn VƒÉn C",
    type: "V·∫≠n ƒë·ªông tr·ªã li·ªáu",
    time: "08:00 - 10:00",
    place: "Q.3, TP.HCM",
    status: "ƒêang th·ª±c hi·ªán",
  },
];

const quickActions = [
  { id: "q1", title: "Xem l·ªãch l√†m vi·ªác", desc: "Qu·∫£n l√Ω l·ªãch h·∫πn s·∫Øp t·ªõi" },
  { id: "q2", title: "G·ª≠i b√°o c√°o", desc: "Ho√†n th√†nh bi√™n b·∫£n l·ªãch h·∫πn" },
  { id: "q3", title: "Xem y√™u c·∫ßu booking", desc: "Nh·∫≠n l·ªãch h·∫πn ph√π h·ª£p" },
  {
    id: "q4",
    title: "Thi·∫øt l·∫≠p l·ªãch r·∫£nh",
    desc: "C·∫•u h√¨nh khung gi·ªù r·∫£nh trong tu·∫ßn",
  },
  { id: "q5", title: "Truy c·∫≠p ƒë√†o t·∫°o", desc: "C·∫≠p nh·∫≠t ki·∫øn th·ª©c" },
];

const trainingSuggestions = [
  {
    id: "t1",
    title: "K·ªπ nƒÉng chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi",
    duration: "2 gi·ªù",
    level: "C∆° b·∫£n",
  },
  {
    id: "t2",
    title: "X·ª≠ l√Ω t√¨nh hu·ªëng kh·∫©n c·∫•p",
    duration: "1.5 gi·ªù",
    level: "N√¢ng cao",
  },
];

const caregiver = {
  id: "c1",
  name: "Tr·∫ßn Th·ªã Mai",
  title: "ChƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi",
  rating: 4.8,
  years: 5,
  price: 150000,
  location: "Qu·∫≠n 1, TP.HCM",
  phone: "0901 234 567",
  email: "tranthimai@example.com",
  workHours: "Th·ª© 2 - Th·ª© 6: 8:00 - 17:00",
  description:
    "Chuy√™n gia chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi v·ªõi 5 nƒÉm kinh nghi·ªám. T√¥i c√≥ kh·∫£ nƒÉng chƒÉm s√≥c to√†n di·ªán cho ng∆∞·ªùi gi√†, bao g·ªìm h·ªó tr·ª£ sinh ho·∫°t h√†ng ng√†y, qu·∫£n l√Ω thu·ªëc men v√† theo d√µi s·ª©c kh·ªèe.",
  certifications: ["Ch·ª©ng ch·ªâ Y t√°", "ChƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi", "CPR"],
  languages: ["Ti·∫øng Vi·ªát", "Ti·∫øng Anh"],
};

export default function CaregiverDashboardScreen() {
  const [detailVisible, setDetailVisible] = useState(false);
  const [bookingVisible, setBookingVisible] = useState(false);

  // Booking states
  const [dateText, setDateText] = useState("");
  const [timeText, setTimeText] = useState("");
  const [duration, setDuration] = useState("4");
  const [serviceType, setServiceType] = useState(caregiver.title);
  const [note, setNote] = useState("");
  const [paymentMethod, setPaymentMethod] = useState("cash");

  const totalPrice = useMemo(() => {
    const hours = parseFloat(duration) || 0;
    return hours * caregiver.price;
  }, [duration]);

  return (
    <ScrollView
      style={styles.container}
      contentContainerStyle={{ paddingBottom: 40 }}
    >
      {/* Header */}
      <View style={styles.header}>
        <Text style={styles.welcomeText}>Ch√†o m·ª´ng, Nguy·ªÖn VƒÉn A!</Text>
        <Text style={styles.subText}>
          D∆∞·ªõi ƒë√¢y l√† th√¥ng tin t·ªïng quan v·ªÅ t√¨nh tr·∫°ng chƒÉm s√≥c c·ªßa b·∫°n
        </Text>
      </View>

      {/* Weekly schedule */}
      <View style={styles.card}>
        <View style={styles.cardHeaderRow}>
          <Text style={styles.cardTitle}>üìÖ L·ªãch l√†m vi·ªác tu·∫ßn n√†y</Text>
          <TouchableOpacity>
            <Text style={styles.linkText}>Chi ti·∫øt ‚Ä∫</Text>
          </TouchableOpacity>
        </View>

        <ScrollView
          horizontal
          showsHorizontalScrollIndicator={false}
          style={{ marginTop: 12 }}
        >
          {sampleWeek.map((w, idx) => {
            const isActive = w.day === "T6";
            return (
              <View
                key={idx}
                style={[styles.weekBox, isActive && styles.weekBoxActive]}
              >
                <Text style={styles.weekDay}>{w.day}</Text>
                <Text style={styles.weekDate}>{w.date}</Text>
                <Text style={styles.weekCount}>{w.count} l·ªãch h·∫πn</Text>
              </View>
            );
          })}
        </ScrollView>
      </View>

      {/* Today's appointments */}
      <View style={styles.card}>
        <View style={styles.cardHeaderRow}>
          <Text style={styles.cardTitle}>üìå Cu·ªôc h·∫πn h√¥m nay</Text>
          <TouchableOpacity>
            <Text style={styles.linkText}>Chi ti·∫øt ‚Ä∫</Text>
          </TouchableOpacity>
        </View>

        <View style={{ marginTop: 12 }}>
          {todayAppointments.map((a) => (
            <View key={a.id} style={styles.appItem}>
              <View>
                <Text style={styles.appClient}>
                  {a.client} <Text style={styles.appBadge}>{a.status}</Text>
                </Text>
                <Text style={styles.appSub}>
                  {a.type} ‚Ä¢ {a.time} ‚Ä¢ {a.place}
                </Text>
              </View>
              <Button
                mode="contained"
                compact
                onPress={() => alert("B·∫Øt ƒë·∫ßu cu·ªôc h·∫πn: " + a.client)}
                contentStyle={{ paddingHorizontal: 10 }}
              >
                B·∫Øt ƒë·∫ßu
              </Button>
            </View>
          ))}
        </View>
      </View>

      {/* Quick actions */}
      <View style={styles.card}>
        <Text style={styles.cardTitle}>‚ö° Thao t√°c nhanh</Text>
        <View style={styles.quickRow}>
          {quickActions.map((q) => (
            <TouchableOpacity key={q.id} style={styles.quickBox}>
              <Text style={styles.quickTitle}>{q.title}</Text>
              <Text style={styles.quickDesc}>{q.desc}</Text>
            </TouchableOpacity>
          ))}
        </View>
      </View>

      {/* Training suggestions */}
      <View style={styles.card}>
        <View style={styles.cardHeaderRow}>
          <Text style={styles.cardTitle}>üéì G·ª£i √Ω ƒë√†o t·∫°o</Text>
          <TouchableOpacity>
            <Text style={styles.linkText}>Xem t·∫•t c·∫£ ‚Ä∫</Text>
          </TouchableOpacity>
        </View>

        <View style={{ marginTop: 12 }}>
          {trainingSuggestions.map((t) => (
            <View key={t.id} style={styles.trainingItem}>
              <View>
                <Text style={styles.trainingTitle}>{t.title}</Text>
                <Text style={styles.trainingMeta}>
                  {t.duration} ‚Ä¢ {t.level}
                </Text>
              </View>
              <Button
                mode="contained"
                onPress={() => alert("M·ªü kho√°: " + t.title)}
              >
                Xem
              </Button>
            </View>
          ))}
        </View>
      </View>

      {/* Suggest caregivers (reuse earlier) */}
      <View style={styles.card}>
        <Text style={styles.cardTitle}>üë• G·ª£i √Ω ng∆∞·ªùi chƒÉm s√≥c ph√π h·ª£p</Text>

        <View style={styles.personCard}>
          <View style={{ flexDirection: "row", alignItems: "center" }}>
            <Avatar.Text
              size={46}
              label={caregiver.name
                .split(" ")
                .map((n) => n[0])
                .slice(-2)
                .join("")}
              style={{ backgroundColor: "#FDE68A", marginRight: 12 }}
            />
            <View style={{ flex: 1 }}>
              <Text style={styles.personName}>Nguy·ªÖn VƒÉn B·ªë</Text>
              <Text style={styles.personInfo}>72 tu·ªïi - B·ªë</Text>
            </View>
          </View>

          <View style={{ marginTop: 12 }}>
            <View style={styles.caregiverRow}>
              <View style={{ flex: 1 }}>
                <Text style={styles.caregiverName}>{caregiver.name}</Text>
                <Text style={styles.caregiverDesc}>{caregiver.title}</Text>
                <Text style={styles.caregiverMeta}>
                  ‚≠ê {caregiver.rating} ‚Ä¢ {caregiver.years} nƒÉm kinh nghi·ªám
                </Text>
              </View>

              <View style={{ alignItems: "flex-end" }}>
                <TouchableOpacity
                  style={styles.ghostBtn}
                  onPress={() => setDetailVisible(true)}
                >
                  <Text style={styles.ghostBtnText}>Xem chi ti·∫øt</Text>
                </TouchableOpacity>
                <TouchableOpacity
                  style={styles.primaryBtn}
                  onPress={() => setBookingVisible(true)}
                >
                  <Text style={styles.primaryBtnText}>ƒê·∫∑t l·ªãch</Text>
                </TouchableOpacity>
              </View>
            </View>
          </View>
        </View>
      </View>

      {/* ----- DETAIL MODAL (gi·ªëng web style) ----- */}
      <Modal
        isVisible={detailVisible}
        onBackdropPress={() => setDetailVisible(false)}
        animationIn="slideInUp"
        animationOut="slideOutDown"
        style={styles.modalContainer}
      >
        <View style={styles.detailModal}>
          <View style={styles.detailHeader}>
            <View style={{ flexDirection: "row", alignItems: "center" }}>
              <Avatar.Text
                size={60}
                label="TM"
                style={{ backgroundColor: "#FDE68A", marginRight: 12 }}
              />
              <View>
                <Text style={styles.detailName}>{caregiver.name}</Text>
                <Text style={styles.detailTitle}>{caregiver.title}</Text>
                <Text style={styles.detailRating}>
                  ‚≠ê {caregiver.rating} ({caregiver.years} nƒÉm)
                </Text>
              </View>
            </View>
            <Text style={styles.detailPrice}>
              {caregiver.price.toLocaleString()} ƒë/gi·ªù
            </Text>
          </View>

          <Divider style={{ marginVertical: 8 }} />

          <View style={styles.contactRow}>
            <Text style={styles.contactItem}>üìç {caregiver.location}</Text>
            <Text style={styles.contactItem}>üìû {caregiver.phone}</Text>
          </View>
          <Text style={styles.contactItem}>‚úâÔ∏è {caregiver.email}</Text>
          <Text style={styles.contactItem}>üïí {caregiver.workHours}</Text>

          <Text style={styles.sectionLabel}>Gi·ªõi thi·ªáu</Text>
          <Text style={styles.sectionText}>{caregiver.description}</Text>

          <Text style={styles.sectionLabel}>Ch·ª©ng ch·ªâ & B·∫±ng c·∫•p</Text>
          <View style={{ flexDirection: "row", flexWrap: "wrap" }}>
            {caregiver.certifications.map((c, i) => (
              <View key={i} style={styles.pill}>
                <Text style={styles.pillText}>{c}</Text>
              </View>
            ))}
          </View>

          <Text style={styles.sectionLabel}>Ng√¥n ng·ªØ</Text>
          <View style={{ flexDirection: "row", flexWrap: "wrap" }}>
            {caregiver.languages.map((l, i) => (
              <View key={i} style={styles.langPill}>
                <Text style={styles.pillText}>{l}</Text>
              </View>
            ))}
          </View>

          <View
            style={{
              flexDirection: "row",
              justifyContent: "flex-end",
              marginTop: 14,
            }}
          >
            <Button
              mode="outlined"
              onPress={() => setDetailVisible(false)}
              style={{ marginRight: 8 }}
            >
              ƒê√≥ng
            </Button>
            <Button
              mode="contained"
              onPress={() => {
                setDetailVisible(false);
                setBookingVisible(true);
              }}
            >
              ƒê·∫∑t l·ªãch ngay
            </Button>
          </View>
        </View>
      </Modal>

      {/* ----- BOOKING MODAL (gi·ªëng web form) ----- */}
      <Modal
        isVisible={bookingVisible}
        onBackdropPress={() => setBookingVisible(false)}
        animationIn="slideInUp"
        animationOut="slideOutDown"
        style={styles.modalContainer}
      >
        <View style={styles.bookingModal}>
          <View style={styles.bookingHeader}>
            <Text style={styles.bookingTitle}>üìÖ ƒê·∫∑t l·ªãch chƒÉm s√≥c</Text>
            <TouchableOpacity onPress={() => setBookingVisible(false)}>
              <Text style={styles.linkText}>‚úï</Text>
            </TouchableOpacity>
          </View>

          <View style={styles.bookingInfoCard}>
            <View style={{ flexDirection: "row", alignItems: "center" }}>
              <Avatar.Text
                size={46}
                label="TM"
                style={{ backgroundColor: "#FDE68A", marginRight: 12 }}
              />
              <View style={{ flex: 1 }}>
                <Text style={{ fontWeight: "700" }}>{caregiver.name}</Text>
                <Text style={{ color: "#64748B" }}>{caregiver.title}</Text>
              </View>
            </View>

            <Divider style={{ marginVertical: 10 }} />
            <View>
              <Text style={styles.smallLabel}>Ng∆∞·ªùi ƒë∆∞·ª£c chƒÉm s√≥c</Text>
              <Text style={{ fontWeight: "600" }}>Nguy·ªÖn VƒÉn B·ªë ‚Ä¢ 72 tu·ªïi</Text>
            </View>
          </View>

          {/* Form */}
          <View style={{ marginTop: 12 }}>
            <Text style={styles.smallLabel}>Ng√†y chƒÉm s√≥c</Text>
            <TextInput
              mode="outlined"
              placeholder="mm/dd/yyyy"
              value={dateText}
              onChangeText={setDateText}
              style={styles.input}
            />

            <Text style={[styles.smallLabel, { marginTop: 8 }]}>
              Gi·ªù b·∫Øt ƒë·∫ßu
            </Text>
            <TextInput
              mode="outlined"
              placeholder="--:--"
              value={timeText}
              onChangeText={setTimeText}
              style={styles.input}
            />

            <View style={{ flexDirection: "row", marginTop: 8 }}>
              <View style={{ flex: 1, marginRight: 8 }}>
                <Text style={styles.smallLabel}>Th·ªùi l∆∞·ª£ng (gi·ªù)</Text>
                <TextInput
                  mode="outlined"
                  value={duration}
                  onChangeText={setDuration}
                  keyboardType="numeric"
                  style={styles.input}
                />
              </View>
              <View style={{ flex: 1 }}>
                <Text style={styles.smallLabel}>Lo·∫°i d·ªãch v·ª•</Text>
                <TextInput
                  value={serviceType}
                  onChangeText={setServiceType}
                  mode="outlined"
                  style={styles.input}
                />
              </View>
            </View>

            <Text style={[styles.smallLabel, { marginTop: 8 }]}>
              Ghi ch√∫ th√™m
            </Text>
            <TextInput
              mode="outlined"
              placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ nhu c·∫ßu chƒÉm s√≥c..."
              value={note}
              onChangeText={setNote}
              multiline
              numberOfLines={3}
              style={[styles.input, { height: 90 }]}
            />

            <Text style={[styles.smallLabel, { marginTop: 8 }]}>
              Ph∆∞∆°ng th·ª©c thanh to√°n
            </Text>
            <RadioButton.Group
              onValueChange={(v) => setPaymentMethod(v)}
              value={paymentMethod}
            >
              <View style={{ flexDirection: "row", alignItems: "center" }}>
                <RadioButton value="cash" />
                <Text style={{ marginRight: 18 }}>Ti·ªÅn m·∫∑t</Text>
                <RadioButton value="bank" />
                <Text>Chuy·ªÉn kho·∫£n</Text>
              </View>
            </RadioButton.Group>

            {/* Price summary */}
            <View style={styles.priceBox}>
              <View
                style={{
                  flexDirection: "row",
                  justifyContent: "space-between",
                }}
              >
                <Text>Gi√° d·ªãch v·ª•:</Text>
                <Text>{caregiver.price.toLocaleString()} VND/gi·ªù</Text>
              </View>
              <View
                style={{
                  flexDirection: "row",
                  justifyContent: "space-between",
                  marginTop: 8,
                }}
              >
                <Text style={{ fontWeight: "700" }}>
                  T·ªïng c·ªông ({duration} gi·ªù):
                </Text>
                <Text style={{ fontWeight: "700", color: "#065F46" }}>
                  {totalPrice.toLocaleString()} VND
                </Text>
              </View>
            </View>

            {/* Actions */}
            <View
              style={{
                flexDirection: "row",
                justifyContent: "flex-end",
                marginTop: 12,
              }}
            >
              <Button
                mode="outlined"
                onPress={() => setBookingVisible(false)}
                style={{ marginRight: 8 }}
              >
                H·ªßy
              </Button>
              <Button
                mode="contained"
                onPress={() => {
                  // mock confirm
                  alert(
                    "ƒê√£ ƒë·∫∑t l·ªãch: " +
                      caregiver.name +
                      "\nT·ªïng: " +
                      totalPrice.toLocaleString() +
                      " VND"
                  );
                  setBookingVisible(false);
                }}
              >
                X√°c nh·∫≠n ƒë·∫∑t l·ªãch
              </Button>
            </View>
          </View>
        </View>
      </Modal>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: "#F8FAFC", padding: 16 },
  header: { marginBottom: 16 },
  welcomeText: { fontSize: 22, fontWeight: "700", color: "#0F172A" },
  subText: { fontSize: 14, color: "#475569", marginTop: 6 },

  card: {
    backgroundColor: "#fff",
    borderRadius: 12,
    padding: 14,
    marginBottom: 14,
    // web-like subtle border
    borderWidth: 1,
    borderColor: "#EEF2F7",
  },
  cardHeaderRow: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
  },
  cardTitle: { fontWeight: "700", fontSize: 16, color: "#0F172A" },
  linkText: { color: "#2563EB" },

  weekBox: {
    width: Math.round(width * 0.24),
    marginRight: 10,
    backgroundColor: "#FFFFFF",
    borderRadius: 10,
    padding: 12,
    borderWidth: 1,
    borderColor: "#EEF2F7",
    alignItems: "center",
  },
  weekBoxActive: { backgroundColor: "#EFF6FF", borderColor: "#93C5FD" },
  weekDay: { color: "#94A3B8", fontSize: 12 },
  weekDate: { fontSize: 18, fontWeight: "700", marginTop: 6 },
  weekCount: { color: "#94A3B8", fontSize: 12, marginTop: 6 },

  appItem: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingVertical: 16,
    borderBottomColor: "#EEF2F7",
    borderBottomWidth: 1,
  },
  appClient: { fontWeight: "700" },
  appSub: { color: "#64748B", marginTop: 6 },
  appBadge: {
    backgroundColor: "#FEEBC8",
    color: "#92400E",
    paddingHorizontal: 8,
    borderRadius: 8,
    fontSize: 12,
  },

  quickRow: { flexDirection: "row", flexWrap: "wrap", marginTop: 12 },
  quickBox: {
    width: (width - 64) / 2,
    backgroundColor: "#FAFAFB",
    borderRadius: 10,
    padding: 12,
    marginRight: 12,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: "#F1F5F9",
  },
  quickTitle: { fontWeight: "700" },
  quickDesc: { color: "#64748B", marginTop: 6, fontSize: 13 },

  trainingItem: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingVertical: 12,
    borderBottomColor: "#EEF2F7",
    borderBottomWidth: 1,
  },
  trainingTitle: { fontWeight: "700" },
  trainingMeta: { color: "#64748B", marginTop: 6 },

  personCard: {
    marginTop: 12,
    backgroundColor: "#fff",
    padding: 12,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: "#EEF2F7",
  },
  personName: { fontWeight: "700" },
  personInfo: { color: "#64748B", marginTop: 4 },

  caregiverRow: { flexDirection: "row", alignItems: "center" },
  caregiverName: { fontWeight: "700", fontSize: 15 },
  caregiverDesc: { color: "#64748B", fontSize: 13, marginTop: 4 },
  caregiverMeta: { color: "#6B7280", marginTop: 6 },

  ghostBtn: {
    borderWidth: 1,
    borderColor: "#E6EEF8",
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 8,
    marginBottom: 8,
  },
  ghostBtnText: { color: "#334155" },

  primaryBtn: {
    backgroundColor: "#10B981",
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 8,
  },
  primaryBtnText: { color: "#fff", fontWeight: "700" },

  // DETAIL MODAL
  modalContainer: { margin: 0, justifyContent: "flex-end" },
  detailModal: {
    backgroundColor: "#fff",
    borderTopLeftRadius: 16,
    borderTopRightRadius: 16,
    padding: 16,
    maxHeight: Platform.OS === "ios" ? "88%" : "92%",
  },
  detailHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
  },
  detailName: { fontSize: 18, fontWeight: "700" },
  detailTitle: { color: "#3B82F6", marginTop: 4 },
  detailRating: { color: "#6B7280", marginTop: 6 },
  detailPrice: { color: "#16A34A", fontWeight: "700" },

  contactRow: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginTop: 8,
  },
  contactItem: { color: "#475569", marginTop: 6 },

  sectionLabel: { marginTop: 12, fontWeight: "700", color: "#0F172A" },
  sectionText: { color: "#475569", marginTop: 6 },

  pill: {
    backgroundColor: "#EEF2FF",
    paddingHorizontal: 10,
    paddingVertical: 6,
    borderRadius: 16,
    marginRight: 8,
    marginTop: 8,
  },
  langPill: {
    backgroundColor: "#D1FAE5",
    paddingHorizontal: 10,
    paddingVertical: 6,
    borderRadius: 16,
    marginRight: 8,
    marginTop: 8,
  },
  pillText: { color: "#0F172A" },

  // BOOKING modal
  bookingModal: {
    backgroundColor: "#fff",
    borderTopLeftRadius: 16,
    borderTopRightRadius: 16,
    padding: 16,
    maxHeight: Platform.OS === "ios" ? "92%" : "96%",
  },
  bookingHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
  },
  bookingTitle: { fontWeight: "700", fontSize: 16 },
  bookingInfoCard: {
    backgroundColor: "#FAFAFB",
    padding: 12,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: "#EEF2F7",
    marginTop: 12,
  },

  smallLabel: { color: "#334155", fontWeight: "700", marginBottom: 6 },
  input: { backgroundColor: "#fff", height: 44 },

  priceBox: {
    backgroundColor: "#F8FAFC",
    padding: 12,
    borderRadius: 8,
    marginTop: 12,
    borderWidth: 1,
    borderColor: "#E6EEF8",
  },

  // other helpers
  sectionTitleBig: { fontWeight: "700", fontSize: 18 },
});
