import { useRoute } from "@react-navigation/native";
import React from "react";
import {
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";
import Icon from "react-native-vector-icons/Feather";

export default function CourseDetail() {
  const route = useRoute();
  const { id } = route.params as { id: string };

  // Gi·∫£ l·∫≠p data (b·∫°n c√≥ th·ªÉ fetch API sau n√†y)
  const course = {
    id,
    title: "ChƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi c∆° b·∫£n",
    duration: "4 gi·ªù",
    documents: 12,
    level: "C∆° b·∫£n",
    description:
      "Nh·ªØng ki·∫øn th·ª©c n·ªÅn t·∫£ng v·ªÅ nhu c·∫ßu, dinh d∆∞·ª°ng, v·∫≠n ƒë·ªông v√† giao ti·∫øp v·ªõi ng∆∞·ªùi cao tu·ªïi trong sinh ho·∫°t h·∫±ng ng√†y.",
    learnings: [
      "N·∫Øm v·ªØng nguy√™n t·∫Øc an to√†n khi h·ªó tr·ª£ sinh ho·∫°t h·∫±ng ng√†y",
      "Nh·∫≠n bi·∫øt s·ªõm d·∫•u hi·ªáu r·ªßi ro v√† c√°ch x·ª≠ l√Ω ban ƒë·∫ßu",
      "Th·ª±c h√†nh giao ti·∫øp tr·∫•n an v√† t√¥n tr·ªçng ng∆∞·ªùi cao tu·ªïi",
    ],
    instructor: {
      name: "BS. Nguy·ªÖn Minh Anh",
      title: "Chuy√™n gia L√£o khoa",
      bio: "Chuy√™n gia v·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c l√£o khoa v√† chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi.",
    },
    contents: [
      {
        section: "T·ªïng quan & an to√†n",
        lessons: [
          { title: "Gi·ªõi thi·ªáu vai tr√≤ caregiver", time: "10m" },
          { title: "Nguy√™n t·∫Øc an to√†n t·∫°i nh√†", time: "18m" },
        ],
      },
    ],
  };

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      {/* Ti√™u ƒë·ªÅ */}
      <View style={styles.header}>
        <TouchableOpacity onPress={() => {}}>
          <Text style={styles.backText}>‚Üê Quay l·∫°i danh s√°ch</Text>
        </TouchableOpacity>
        <Text style={styles.title}>{course.title}</Text>
        <View style={styles.metaRow}>
          <Text style={styles.metaText}>‚è± {course.duration}</Text>
          <Text style={styles.metaText}>üìÑ {course.documents} t√†i li·ªáu</Text>
          <Text style={styles.metaText}>üéØ {course.level}</Text>
        </View>
        <Text style={styles.description}>{course.description}</Text>

        <TouchableOpacity style={styles.startButton}>
          <Text style={styles.startText}>B·∫Øt ƒë·∫ßu h·ªçc</Text>
        </TouchableOpacity>
      </View>

      {/* H·ªçc ƒë∆∞·ª£c g√¨ */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>B·∫°n s·∫Ω h·ªçc ƒë∆∞·ª£c</Text>
        {course.learnings.map((item, index) => (
          <View key={index} style={styles.learningItem}>
            <Icon name="check-square" color="#2ecc71" size={18} />
            <Text style={styles.learningText}>{item}</Text>
          </View>
        ))}
      </View>

      {/* Gi·∫£ng vi√™n */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Gi·∫£ng vi√™n</Text>
        <View style={styles.teacherCard}>
          <View style={styles.avatar}>
            <Text style={{ color: "#fff", fontWeight: "700" }}>MA</Text>
          </View>
          <View>
            <Text style={styles.teacherName}>{course.instructor.name}</Text>
            <Text style={styles.teacherTitle}>{course.instructor.title}</Text>
            <Text style={styles.teacherBio}>{course.instructor.bio}</Text>
          </View>
        </View>
      </View>

      {/* N·ªôi dung kh√≥a h·ªçc */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>N·ªôi dung kh√≥a h·ªçc</Text>
        {course.contents.map((section, index) => (
          <View key={index} style={styles.lessonSection}>
            <Text style={styles.lessonSectionTitle}>{section.section}</Text>
            {section.lessons.map((lesson, i) => (
              <View key={i} style={styles.lessonItem}>
                <Icon name="play-circle" size={16} color="#1F6FEB" />
                <Text style={styles.lessonText}>
                  {lesson.title} ‚Äî {lesson.time}
                </Text>
              </View>
            ))}
          </View>
        ))}
      </View>

      {/* H·ªó tr·ª£ */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>H·ªó tr·ª£</Text>
        <Text style={styles.supportText}>
          G·∫∑p v·∫•n ƒë·ªÅ khi h·ªçc? Li√™n h·ªá h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c gi√∫p ƒë·ª° k·ªãp th·ªùi.
        </Text>
        <TouchableOpacity>
          <Text style={styles.supportLink}>Li√™n h·ªá h·ªó tr·ª£</Text>
        </TouchableOpacity>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: "#fff", paddingHorizontal: 16 },
  backText: { color: "#1F6FEB", marginBottom: 10 },
  header: { marginTop: 12, marginBottom: 20 },
  title: { fontSize: 22, fontWeight: "700", marginBottom: 8 },
  metaRow: { flexDirection: "row", gap: 12, marginBottom: 8 },
  metaText: { color: "#666", fontSize: 13 },
  description: { color: "#444", lineHeight: 20, marginBottom: 12 },
  startButton: {
    backgroundColor: "#1F6FEB",
    paddingVertical: 10,
    borderRadius: 8,
    alignItems: "center",
  },
  startText: { color: "#fff", fontWeight: "700" },

  section: {
    backgroundColor: "#fafafa",
    borderRadius: 10,
    padding: 14,
    marginBottom: 14,
  },
  sectionTitle: { fontSize: 16, fontWeight: "700", marginBottom: 10 },
  learningItem: { flexDirection: "row", alignItems: "center", marginBottom: 6 },
  learningText: { marginLeft: 8, color: "#333" },

  teacherCard: { flexDirection: "row", gap: 12, alignItems: "center" },
  avatar: {
    width: 42,
    height: 42,
    borderRadius: 21,
    backgroundColor: "#1F6FEB",
    alignItems: "center",
    justifyContent: "center",
  },
  teacherName: { fontWeight: "700" },
  teacherTitle: { color: "#555", fontSize: 13 },
  teacherBio: { color: "#666", fontSize: 12, marginTop: 4, width: "90%" },

  lessonSection: { marginBottom: 10 },
  lessonSectionTitle: {
    fontWeight: "700",
    fontSize: 14,
    marginBottom: 6,
  },
  lessonItem: { flexDirection: "row", alignItems: "center", marginBottom: 4 },
  lessonText: { marginLeft: 8, color: "#444", fontSize: 13 },

  supportText: { color: "#444", fontSize: 13 },
  supportLink: { color: "#1F6FEB", marginTop: 4, fontWeight: "500" },
});
